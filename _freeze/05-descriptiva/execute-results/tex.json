{
  "hash": "e0432bdfab2e0f5d6e5366218a1db170",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Estadística Descriptiva\nlang: es\n---\n\nEsta práctica contiene ejercicios que muestran cómo realizar un análisis descriptivo de un conjunto de datos mediante estadísticos muestrales, como por ejemplo:\n\n- Medidas de tendencia central: media, mediana y moda.\n- Medidas de posición: cuartiles y percentiles.\n- Medidas de dispersión: rango, rango intercuartílico, varianza, desviación típica y coeficiente de variación.\n- Medidas de forma: coeficiente de asimetría y coeficiente de apuntamiento.\n\n## Ejercicios Resueltos\n\nPara la realización de esta práctica se requieren los siguientes paquetes:\n\n```r\nlibrary(tidyverse) \n# Incluye los siguientes paquetes:\n# - readr: para la lectura de ficheros csv. \n# - dplyr: para el preprocesamiento y manipulación de datos.\nlibrary(DescTools) # para el cálculo de la moda.\nlibrary(moments) # para el cálculo del coeficiente de asimetría y apuntamiento.\nlibrary(vtable) # para resúmenes estadísticos.\nlibrary(skimr) # para resúmenes estadísticos.\nlibrary(summarytools) # para resúmenes estadísticos.\nlibrary(knitr) # para el formateo de tablas.\n```\n\n:::{#exr-descriptiva-medicamentos}\nSe realizó una encuesta a 40 personas de más de 70 años sobre el número de medicamentos distintos que tomaban habitualmente. El resultado de dicha encuesta fue el siguiente:\n\n| |\n|:-:|\n|3 − 1 − 2 − 2 − 0 − 1 − 4 − 2 − 3 − 5 − 1 − 3 − 2 − 3 − 1 − 4 − 2 − 4 − 3 − 2|\n|3 − 5 − 0 − 1 − 2 − 0 − 2 − 3 − 0 − 1 − 1 − 5 − 3 − 4 − 2 − 3 − 0 − 1 − 2 − 3|\n\na.  Crear un conjunto de datos con la variable `medicamentos`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    ::::{.panel-tabset}\n    ## Base\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df <- data.frame(medicamentos = c(3, 1, 2, 2, 0, 1, 4, 2, 3, 5, 1, 3, 2, 3, 1, 4, 2, 4, 3, 2, 3, 5, 0, 1, 2, 0, 2, 3, 0, 1, 1, 5, 3, 4, 2, 3, 0, 1, 2, 3))\n    ```\n    :::\n\n\n    ## tidyverse\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(tidyverse)\n    df <- tibble(medicamentos = c(3, 1, 2, 2, 0, 1, 4, 2, 3, 5, 1, 3, 2, 3, 1, 4, 2, 4, 3, 2, 3, 5, 0, 1, 2, 0, 2, 3, 0, 1, 1, 5, 3, 4, 2, 3, 0, 1, 2, 3))\n    ```\n    :::\n\n    :::\n    :::\n\na.  Calcular el tamaño muestral. \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n\n    El tamaño muestral generalmente es el número de filas del data frame. Para calcular el número de filas podemos usar la función [`nrow`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/nrow) del paquete base de R.\n    \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    nrow(df)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 40\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n\n    El tamaño muestral generalmente es el número de filas del data frame. Para calcular el número de filas podemos usar la función la función [`count`](https://dplyr.tidyverse.org/reference/count.html) del paquete `dplyr` de `tidyverse`.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(knitr)\n    count(df) |> kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |  n|\n    |--:|\n    | 40|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n    \na.  Calcular la media.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Podemos calcular la media con la función [`mean`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/mean) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la media.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la media.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    mean(df$medicamentos)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 2.225\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular la media hay que pasarle como argumento la función [`mean`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/mean) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la media.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la media.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(media = mean(medicamentos)) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | media|\n    |-----:|\n    | 2.225|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular la mediana.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Podemos calcular la mediana con la función [`median`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/median) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la mediana.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la mediana.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    median(df$medicamentos)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 2\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular la mediana hay que pasarle como argumento la función [`median`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/median) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la mediana.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la mediana.\n    \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(mediana = median(medicamentos)) |>\n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | mediana|\n    |-------:|\n    |       2|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular la moda.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n    ## Base\n    Para calcular la moda podemos usar la función [`Mode`](https://www.rdocumentation.org/packages/DescTools/versions/0.99.0/topics/Mode) del paquete `DescTools`.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la moda.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la moda.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(DescTools)\n    Mode(df$medicamentos, na.rm = TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 2 3\n    attr(,\"freq\")\n    [1] 10\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular la moda podemos usar la función [`Mode`](https://www.rdocumentation.org/packages/DescTools/versions/0.99.0/topics/Mode) del paquete `DescTools`.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la moda.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la moda.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(tidyverse) \n    df |> summarise(moda = Mode(medicamentos, na.rm = TRUE)) |>\n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | moda|\n    |----:|\n    |    2|\n    |    3|\n    \n    \n    :::\n    :::\n\n    :::\n\n    Existen dos modas 2 y 3 que son los valores más frecuentes en el conjunto de datos. Por tanto, el conjunto de datos es bimodal.\n    :::\n\na.  Calcular el mínimo.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Podemos calcular el mínimo con la función [`min`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/min) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el mínimo.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el mínimo.\n  \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    min(df$medicamentos)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 0\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular el mínimo hay que pasarle como argumento la función [`min`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/min) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el mínimo.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el mínimo.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(mínimo = min(medicamentos, na.rm = TRUE))\n    ```\n    \n    ::: {.cell-output-display}\n    \n    | mínimo|\n    |------:|\n    |      0|\n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular el máximo.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Podemos calcular el máximo con la función [`max`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/max) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el máximo.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el máximo.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    max(df$medicamentos)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 5\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular el máximo hay que pasarle como argumento la función [`max`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/max) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el máximo.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el máximo.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(máximo = max(medicamentos))\n    ```\n    \n    ::: {.cell-output-display}\n    \n    | máximo|\n    |------:|\n    |      5|\n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular los cuartiles.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n\n    Podemos calcular los cuartiles con la función [`quantile`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quantile) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular los cuartiles.\n    - `probs`: vector de probabilidades para calcular los cuartiles. Por defecto es `c(0, 0.25, 0.5, 0.75, 1)`.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular los cuartiles.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    quantile(df$medicamentos, prob = c(0.25, 0.5, 0.75))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    25% 50% 75% \n      1   2   3 \n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular los cuartiles hay que pasarle como argumento la función [`quantile`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quantile) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular los cuartiles.\n    - `probs`: vector de probabilidades para calcular los cuartiles. Por defecto es `c(0, 0.25, 0.5, 0.75, 1)`.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular los cuartiles.\n\n    Es necesario usar la función [`unnest`](https://tidyr.tidyverse.org/reference/unnest.html) del paquete `tidyr` para desanidar el resultado de la función `quantile`.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(cuartiles = list(quantile(medicamentos, prob = c(0.25, 0.5, 0.75)))) |>\n        unnest(cuartiles) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | cuartiles|\n    |---------:|\n    |         1|\n    |         2|\n    |         3|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular los percentiles 5 y 95.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n\n    Podemos calcular los percentiles también con la función [`quantile`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quantile) del paquete base de R, simplemente indicando el vector de probabilidades acumuladas correspondientes a los percentiles que queremos calcular.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    quantile(df$medicamentos, prob = c(0.05, 0.95))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n     5% 95% \n      0   5 \n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n\n    Podemos calcular los percentiles también con la función [`quantile`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quantile) del paquete base de R, simplemente indicando el vector de probabilidades acumuladas correspondientes a los percentiles que queremos calcular.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(percentiles = list(quantile(medicamentos, prob = c(0.05, 0.95)))) |>\n        unnest(percentiles) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | percentiles|\n    |-----------:|\n    |           0|\n    |           5|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular el rango. \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    max(df$medicamentos) - min(df$medicamentos)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 5\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(rango = max(medicamentos) - min(medicamentos)) |>\n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | rango|\n    |-----:|\n    |     5|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular el rango intercuartílico. \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Podemos calcular el rango intercuartílico con la función [`IQR`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/IQR) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el rango intercuartílico.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el rango intercuartílico.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    IQR(df$medicamentos)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 2\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular el rango intercuartílico hay que pasarle como argumento la función [`IQR`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/IQR) del paquete base de R.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el rango intercuartílico.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el rango intercuartílico.\n  \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(IQR = IQR(medicamentos)) |>\n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | IQR|\n    |---:|\n    |   2|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular la varianza \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Podemos usar la función [`var`](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/cor) del paquete `stats` de R para calcular la _cuasivarianza_ o _varianza corregida_ $\\sum \\frac{(x_i-\\bar x)^2}{n-1}$. Para calcular la varianza hay que corregir la cuasivarianza multiplicando por $\\frac{n-1}{n}$, donde $n$ es el tamaño muestral.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la cuasivarianza.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la cuasivarianza.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    n <- nrow(df)\n    # Cuasivarianza\n    print(paste(\"Cuasivarianza:\", var(df$medicamentos)))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"Cuasivarianza: 2.025\"\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # Varianza\n    print(paste(\"Varianza: \", var(df$medicamentos)*(n-1)/n))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"Varianza:  1.974375\"\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular la cuasivarianza hay que pasarle como argumento la función [`var`](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/cor) del paquete `stats` de R. Para calcular la varianza hay que corregir la cuasivarianza multiplicando por $\\frac{n-1}{n}$, donde $n$ es el tamaño muestral.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la cuasivarianza.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la cuasivarianza.\n    - \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(cuasivarianza = var(medicamentos), \n        varianza = var(medicamentos)*(n()-1)/n()) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | cuasivarianza| varianza|\n    |-------------:|--------:|\n    |         2.025| 1.974375|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular la desviación típica.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Podemos usar la función [`sd`](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/sd) del paquete `stats` de R para calcular la _cuasidesviación típica_ o _desviación típica corregida_ $\\sqrt{\\sum \\frac{(x_i-\\bar x)^2}{n-1}}$. Para calcular la desviación típica hay que corregir la cuasidesviación típica multiplicando por $\\sqrt{\\frac{n-1}{n}}$, donde $n$ es el tamaño muestral.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la cuasivarianza.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la cuasivarianza.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    n <- nrow(df)\n    # Cuasidesviación típica\n    print(paste(\"Cuasidesviación típica:\", sd(df$medicamentos)))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"Cuasidesviación típica: 1.42302494707577\"\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # Desviación típica\n    print(paste(\"Desviación típica: \", sd(df$medicamentos)*sqrt((n-1)/n)))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] \"Desviación típica:  1.40512454963964\"\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular la cuasivarianza hay que pasarle como argumento la función [`sd`](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/sd) del paquete `stats` de R para calcular la _cuasidesviación típica_ o _desviación típica corregida_ $\\sqrt{\\sum \\frac{(x_i-\\bar x)^2}{n-1}}$. Para calcular la desviación típica hay que corregir la cuasidesviación típica multiplicando por $\\sqrt{\\frac{n-1}{n}}$, donde $n$ es el tamaño muestral.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular la cuasivarianza.\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular la cuasivarianza.\n  \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(cuasidesviación = sd(medicamentos), \n        desviación = sd(medicamentos)*sqrt((n()-1)/n())) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | cuasidesviación| desviación|\n    |---------------:|----------:|\n    |        1.423025|   1.405125|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular el coeficiente de variación.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    No existe una función en R para calcular el coeficiente de variación, pero se puede calcular dividiendo la desviación típica entre el valor absoluto de la media. Se suele expresar como porcentaje multiplicando por 100.\n\n    :::{.panel-tabset}\n    ## Base\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    sd(df$medicamentos, na.rm = TRUE) / abs(mean(df$medicamentos, na.rm = TRUE)) * 100\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 63.95618\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular el coeficiente de variación se divide la desviación típica entre el valor absoluto de la media y se multiplica por 100 para expresarlo como porcentaje.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(coef_variacion = sd(medicamentos, na.rm = TRUE) / abs(mean(medicamentos, na.rm = TRUE)) * 100) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | coef_variacion|\n    |--------------:|\n    |       63.95618|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular el coeficiente de asimetría.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n    ## Base\n\n    Para calcular el coeficiente de asimetría podemos usar la función [`skewness`](https://www.rdocumentation.org/packages/moments/versions/0.14/topics/skewness) del paquete `moments`.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el coeficiente de asimetría\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el coeficiente de asimetría.\n  \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(moments)\n    skewness(df$medicamentos, na.rm = TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 0.1913698\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular el coeficiente de asimetría podemos usar la función [`skewness`](https://www.rdocumentation.org/packages/moments/versions/0.14/topics/skewness) del paquete `moments`.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el coeficiente de asimetría\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el coeficiente de asimetría.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(moments)\n    df |> summarise(coef_asimetria = skewness(medicamentos, na.rm = TRUE)) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | coef_asimetria|\n    |--------------:|\n    |      0.1913698|\n    \n    \n    :::\n    :::\n\n    :::\n\n    Como $g_1$ está próxima a $0$, la distribución es casi simétrica.\n    :::\n\na.  Calcular el coeficiente de apuntamiento.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n    ## Base\n\n    Para calcular el coeficiente de apuntamiento podemos usar la función [`kurtosis`](https://www.rdocumentation.org/packages/moments/versions/0.14/topics/kurtosis) del paquete `moments`.\n\n    Parámetros:\n    - `x`: vector numérico del que calcular el coeficiente de apuntamiento\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el coeficiente de apuntamiento.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(moments)\n    kurtosis(df$medicamentos, na.rm = TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 2.320303\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular el coeficiente de apuntamiento podemos usar la función [`kurtosis`](https://www.rdocumentation.org/packages/moments/versions/0.14/topics/kurtosis) del paquete `moments`.\n\n    Parámetros:\n\n    - `x`: vector numérico del que calcular el coeficiente de asimetría\n    - `na.rm`: si es `TRUE` se eliminan los valores perdidos antes de calcular el coeficiente de asimetría.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(moments)\n    df |> summarise(coef_apuntamiento = kurtosis(medicamentos, na.rm = TRUE)) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | coef_apuntamiento|\n    |-----------------:|\n    |          2.320303|\n    \n    \n    :::\n    :::\n\n    :::\n\n    Como $g_2>0$, la distribución es más apuntada de lo normal (leptocúrtica). Como además $g_2\\not\\in(-2,2)$ se puede concluir que la muestra es demasiado apuntada para provenir de una población normal.\n    :::\n:::\n\n:::{#exr-descriptiva-colesterol}\nEl fichero [`colesterol.csv`](datos/colesterol.csv) contiene información de una muestra de pacientes donde se han medido la edad, el sexo, el peso, la altura y el nivel de colesterol, además de su nombre.\n\na.  Crear un data frame con los datos de todos los pacientes del estudio a partir del fichero [`colesterol.csv`](datos/colesterol.csv).\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df <- read.csv(\"https://aprendeconalf.es/estadistica-practicas-r/datos/colesterol.csv\")\n    ```\n    :::\n\n\n    ## tidyverse\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(tidyverse)\n    df <- read_csv(\"https://aprendeconalf.es/estadistica-practicas-r/datos/colesterol.csv\")\n    ```\n    :::\n\n    :::\n    :::\n\na.  Obtener un resumen del data frame que muestre las variables que contiene, su tipo, el número de filas y el número de columnas.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n    :::{.panel-tabset}\n    ## Base\n    Para obtener las variables de un data frame podemos usar la función [`str`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/str) del paquete base de R.\n\n    Parámetros:\n    - `object`: objeto del que obtener su estructura.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    str(df)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    spc_tbl_ [14 x 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n     $ nombre    : chr [1:14] \"José Luis Martínez Izquierdo\" \"Rosa Díaz Díaz\" \"Javier García Sánchez\" \"Carmen López Pinzón\" ...\n     $ edad      : num [1:14] 18 32 24 35 46 68 51 22 35 46 ...\n     $ sexo      : chr [1:14] \"H\" \"M\" \"H\" \"M\" ...\n     $ peso      : num [1:14] 85 65 NA 65 51 66 62 60 90 75 ...\n     $ altura    : num [1:14] 1.79 1.73 1.81 1.7 1.58 1.74 1.72 1.66 1.94 1.85 ...\n     $ colesterol: num [1:14] 182 232 191 200 148 249 276 NA 241 280 ...\n     - attr(*, \"spec\")=\n      .. cols(\n      ..   nombre = col_character(),\n      ..   edad = col_double(),\n      ..   sexo = col_character(),\n      ..   peso = col_double(),\n      ..   altura = col_double(),\n      ..   colesterol = col_double()\n      .. )\n     - attr(*, \"problems\")=<externalptr> \n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Para obtener las variables y sus tipos de un data frame podemos usar la función [`glimpse`](https://dplyr.tidyverse.org/reference/glimpse.html) del paquete `dplyr` de `tidyverse`.\n\n    Parámetros:\n    - `data`: data frame del que obtener las variables.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    glimpse(df)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    Rows: 14\n    Columns: 6\n    $ nombre     <chr> \"José Luis Martínez Izquierdo\", \"Rosa Díaz Díaz\",~\n    $ edad       <dbl> 18, 32, 24, 35, 46, 68, 51, 22, 35, 46, 53, 58, 2~\n    $ sexo       <chr> \"H\", \"M\", \"H\", \"M\", \"M\", \"H\", \"H\", \"M\", \"H\", \"H\",~\n    $ peso       <dbl> 85, 65, NA, 65, 51, 66, 62, 60, 90, 75, 55, 78, 1~\n    $ altura     <dbl> 1.79, 1.73, 1.81, 1.70, 1.58, 1.74, 1.72, 1.66, 1~\n    $ colesterol <dbl> 182, 232, 191, 200, 148, 249, 276, NA, 241, 280, ~\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## summarytools\n    Para obtener las variables y sus tipos de un data frame podemos usar la función [`dfSummary`](https://www.rdocumentation.org/packages/summarytools/versions/1.1.4/topics/dfSummary) del paquete [`summarytools`](https://www.rdocumentation.org/packages/summarytools).\n\n    Parámetros:\n    - `x`: data frame del que obtener las variables.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(summarytools)\n    print(dfSummary(df, plain.ascii = FALSE, style = \"grid\"), method = \"render\")\n    ```\n    \n    ::: {.cell-output-display}\n    \n    ```{=html}\n    <div class=\"container st-container\">\n    <h3>Data Frame Summary</h3>\n    <h4>df</h4>\n    <strong>Dimensions</strong>: 14 x 6\n      <br/><strong>Duplicates</strong>: 0\n    <br/>\n    <table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline \">\n      <thead>\n        <tr>\n          <th align=\"center\" class=\"st-protect-top-border\"><strong>No</strong></th>\n          <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n          <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n          <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n          <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n          <th align=\"center\" class=\"st-protect-top-border\"><strong>Valid</strong></th>\n          <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td align=\"center\">1</td>\n          <td align=\"left\">nombre\n    [character]</td>\n          <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. Antonio Fern&#0225;ndez Oca&#0241;a</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. Antonio Ruiz Cruz</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. Carmen L&#0243;pez Pinz&#0243;n</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. Carolina Rubio Moreno</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. Javier Garc&#0237;a S&#0225;nchez</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. Jos&#0233; Luis Mart&#0237;nez Izquie</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. Jos&#0233; Mar&#0237;a de la Gu&#0237;a San</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. Macarena &#0193;lvarez Luna</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. Marisa L&#0243;pez Collado</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. Miguel Angel Cuadrado Gut</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 4 others ]</td></tr></table></td>\n          <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">7.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">4</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">28.6%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n          <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAADcAAAEKCAQAAAAcQQUKAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAACYktHRAD/h4/MvwAAAAd0SU1FB+kIDhUvNup7EHcAAAETSURBVHja7dZdDsFQFIVRFaMzAkbICEyP11s/oelub5yu/SbIipwmvuG+W3P7VbXi3KF9cXl7yNMwj2i/fhi/dXz58C3662rfDofD4XC4LtzTv3n2v/t1Q5snyzRn2yq1b9fzUbku0pkfOZ2Jw+FwONwfcjozOOEXXO3b4XA4HA63BU5nBqczg6t9OxwOh8PhtsDpzOB0ZnC1b4fD4XA4XBdO+AVXm9OZOBwOh8PhJk1nBleb05k4HA6Hw+EmTWcGJ/yCq307HA6Hw+G2wOnM4HRmcLVvh8PhcDjcFjidGZzODK727XA4HA6H68IJv+Bqcz905tydm+N97cy5Gz/rtW+Hw+FwOFwXrmdnLr/at1uZewBxe0ESBJWlqgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyNS0wOC0xNFQyMTo0Nzo1NCswMDowMM9xVNcAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjUtMDgtMTRUMjE6NDc6NTQrMDA6MDC+LOxrAAAAKHRFWHRkYXRlOnRpbWVzdGFtcAAyMDI1LTA4LTE0VDIxOjQ3OjU0KzAwOjAw6TnNtAAAAABJRU5ErkJggg==\"></td>\n          <td align=\"center\">14\n    (100.0%)</td>\n          <td align=\"center\">0\n    (0.0%)</td>\n        </tr>\n        <tr>\n          <td align=\"center\">2</td>\n          <td align=\"left\">edad\n    [numeric]</td>\n          <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 38.2 (15.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">18 &le; 35 &le; 68</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 25 (0.4)</td></tr></table></td>\n          <td align=\"left\" style=\"vertical-align:middle\">12 distinct values</td>\n          <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJgAAABuCAQAAABxABKuAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAACYktHRAD/h4/MvwAAAAd0SU1FB+kIDhUvNup7EHcAAAFSSURBVHja7dzLCcJAFEBRI1ZnBVqhVmB7uh3dyImMH7xnJyTyuDBZPWa5biK2nx7g1xQMFQztxh/2PTtP/fwdlpmz2L+PD+/kxUd7ePaCT8+dZb2OJCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYuluom7tTaL5pltHDBuK79viek0lmzzLqSKKCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGXbqj7Xbaudxzu9PvTYOsXBzuSqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGBoGVfxTl96jd6njRuIS41MRxIVDBUM3QB5IxYydzivEAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyNS0wOC0xNFQyMTo0Nzo1NCswMDowMM9xVNcAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjUtMDgtMTRUMjE6NDc6NTQrMDA6MDC+LOxrAAAAKHRFWHRkYXRlOnRpbWVzdGFtcAAyMDI1LTA4LTE0VDIxOjQ3OjU0KzAwOjAw6TnNtAAAAABJRU5ErkJggg==\"></td>\n          <td align=\"center\">14\n    (100.0%)</td>\n          <td align=\"center\">0\n    (0.0%)</td>\n        </tr>\n        <tr>\n          <td align=\"center\">3</td>\n          <td align=\"left\">sexo\n    [character]</td>\n          <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. H</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. M</td></tr></table></td>\n          <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">57.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">6</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">42.9%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n          <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGIAAAA3CAQAAABd71fBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAACYktHRAD/h4/MvwAAAAd0SU1FB+kIDhUvNup7EHcAAACgSURBVGje7djBCYAwEADBRKzOCrRCrSDt6TcRBMknm2Pn50Nx4SJ4+U7zW0a/gBGRItb64pzogBz5IyKlbfS7/VSaqxDjZASFERRGUBhBYQSFERRGUBhBYQTF6x+79D1lsFwvOCZadqRq2RFjnEJENGfiGj5Pe+65C7U86/2shBgnIyiMoDCCwggKIyiMoDCCwggKIyjiLc9mFWKcjKB4AMlDC+F+elCbAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDI1LTA4LTE0VDIxOjQ3OjU0KzAwOjAwz3FU1wAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyNS0wOC0xNFQyMTo0Nzo1NCswMDowML4s7GsAAAAodEVYdGRhdGU6dGltZXN0YW1wADIwMjUtMDgtMTRUMjE6NDc6NTQrMDA6MDDpOc20AAAAAElFTkSuQmCC\"></td>\n          <td align=\"center\">14\n    (100.0%)</td>\n          <td align=\"center\">0\n    (0.0%)</td>\n        </tr>\n        <tr>\n          <td align=\"center\">4</td>\n          <td align=\"left\">peso\n    [numeric]</td>\n          <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 70.9 (16.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">51 &le; 65 &le; 109</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 17 (0.2)</td></tr></table></td>\n          <td align=\"left\" style=\"vertical-align:middle\">12 distinct values</td>\n          <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJgAAABuCAQAAABxABKuAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAACYktHRAD/h4/MvwAAAAd0SU1FB+kIDhUvNup7EHcAAAFbSURBVHja7dzBbYMwAEBRiJguEzQTthNkvfTqVr08aCAR/90iIQRfMgfb8fyYIi5HP8C7KRgqGFrGH/Y9+8LP38d89MuuNT74svou0zRd4dr70W/9TxqSqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGDox7Zz3Xl/Rr/26Z9x571pSKKCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqFNZ++Y5y6x7HUU0o7BbIFFrt5zQaYhiQqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoZ2nKJ+Hbq6cBvWC04ZbMsfOBqSqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYGgep7c/O6zoT+Oc/lwj05BEBUMFQ99UMBOPZ+QYAQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyNS0wOC0xNFQyMTo0Nzo1NCswMDowMM9xVNcAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjUtMDgtMTRUMjE6NDc6NTQrMDA6MDC+LOxrAAAAKHRFWHRkYXRlOnRpbWVzdGFtcAAyMDI1LTA4LTE0VDIxOjQ3OjU0KzAwOjAw6TnNtAAAAABJRU5ErkJggg==\"></td>\n          <td align=\"center\">13\n    (92.9%)</td>\n          <td align=\"center\">1\n    (7.1%)</td>\n        </tr>\n        <tr>\n          <td align=\"center\">5</td>\n          <td align=\"left\">altura\n    [numeric]</td>\n          <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1.8 (0.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1.6 &le; 1.8 &le; 2</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0.1 (0.1)</td></tr></table></td>\n          <td align=\"left\" style=\"vertical-align:middle\">14 distinct values</td>\n          <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJgAAABuCAQAAABxABKuAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAACYktHRAD/h4/MvwAAAAd0SU1FB+kIDhUvNup7EHcAAAFfSURBVHja7dyxbcMwFEDBKPB0mSCZMJnA6yUtHbh5BEFB8F3nwqbwAKqgvnz8vlG8n30BVyNYJFh0Gz/svp/9TC74eey9znG52/SvLPEx8Z37qVdsS0aCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRUvGzmfn7Xevt2K+f9Gc/sy8/fzE/d7VHtmSkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFgkWCRYJFg0cn/vbPX7MOTr+HhyUsFW/HwxJaMBIsEiwSLBIsEiwSLBIsEiwSLBIsEiwSLBIsEiwSLBIsEix6OqHe/oHBF/870z3xl4BpsyUiwSLBIsEiwSLBIsEiwSLBIsEiwSLBIsEiwSLBIsEiwSLDoGI/xv53pPzXO6R8aNbZkJFgkWPQHoAkVNpKup5gAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjUtMDgtMTRUMjE6NDc6NTQrMDA6MDDPcVTXAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDI1LTA4LTE0VDIxOjQ3OjU0KzAwOjAwvizsawAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyNS0wOC0xNFQyMTo0Nzo1NCswMDowMOk5zbQAAAAASUVORK5CYII=\"></td>\n          <td align=\"center\">14\n    (100.0%)</td>\n          <td align=\"center\">0\n    (0.0%)</td>\n        </tr>\n        <tr>\n          <td align=\"center\">6</td>\n          <td align=\"left\">colesterol\n    [numeric]</td>\n          <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 220.2 (39.8)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">148 &le; 210 &le; 280</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 55 (0.2)</td></tr></table></td>\n          <td align=\"left\" style=\"vertical-align:middle\">13 distinct values</td>\n          <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJgAAABuCAQAAABxABKuAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAACYktHRAD/h4/MvwAAAAd0SU1FB+kIDhUvNup7EHcAAAFiSURBVHja7d1BTsJAGIBRazgdJ9AT6gm4Hm5HF2ZeQx3A7+1ISGm+ZLr4aTvb9SXidfUJPJqCoYKh0/jh1tezz+kDvm2rQ/xmPLnT7qNMOU9967KuBWtJooKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhg287v2fzTxG8Dzfq/+Ng+54iaEmigqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhgqGCoYKhJ5zpz/+5sccTBjv2FUktSVQwVDBUMFQwVDBUMFQwVDBUMFQwVDBUMFQwVDBUMFQwVDD0bUS9bsOAY+fwt/Rjpr9qw4CZ373cxXYGLUlUMFQwVDBUMFQwVDBUMFQwVDBUMFQwVDBUMFQwVDBUMFQwtI3D9I+Hmaz/rfFlRVuNTEsSFQwVDH0BYZcWNs7B9l8AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjUtMDgtMTRUMjE6NDc6NTQrMDA6MDDPcVTXAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDI1LTA4LTE0VDIxOjQ3OjU0KzAwOjAwvizsawAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyNS0wOC0xNFQyMTo0Nzo1NCswMDowMOk5zbQAAAAASUVORK5CYII=\"></td>\n          <td align=\"center\">13\n    (92.9%)</td>\n          <td align=\"center\">1\n    (7.1%)</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.1.4 (<a href='https://www.r-project.org/'>R</a> version 4.3.3)<br/>2025-08-14</p>\n    </div>\n    ```\n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular el número de valores perdidos en cada variable.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n    ## Base\n    Para calcular el número de valores perdidos podemos usar la función [`colSums`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/colSums) del paquete base de R, aplicada a la función [`is.na`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/is.na) que devuelve un vector lógico indicando si cada elemento es `NA` o no.\n\n    Parámetros:\n    - `x`: matriz o data frame del que calcular el número de valores perdidos.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    colSums(is.na(df))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n        nombre       edad       sexo       peso     altura colesterol \n             0          0          0          1          0          1 \n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. Para obtener un resumen de todas las variables del data frame, hay que indicar el argumento `across(everything(), ...)`. En particular, para calcular el número de valores perdidos podemos aplicar la función `sum` al vector que devuelve la función [`is.na`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/is.na) del paquete base de R.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(across(everything(), ~ sum(is.na(.))))\n    ```\n    \n    ::: {.cell-output-display}\n    \n    | nombre| edad| sexo| peso| altura| colesterol|\n    |------:|----:|----:|----:|------:|----------:|\n    |      0|    0|    0|    1|      0|          1|\n    \n    :::\n    :::\n\n\n    ## skimr\n    Podemos obtener un resumen estadístico con la función [`skim`](https://www.rdocumentation.org/packages/skimr/versions/2.2.1/topics/skim) del paquete [`skimr`](https://www.rdocumentation.org/packages/skimr). El resumen incluye el número de valores perdidos para cada variable además de otros estadísticos.\n\n    Parámetros:\n    - `data`: data frame del que obtener el resumen estadístico.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(skimr)\n    skim(df)\n    ```\n    \n    ::: {.cell-output-display}\n    \n    Table: Data summary\n    \n    |                         |     |\n    |:------------------------|:----|\n    |Name                     |df   |\n    |Number of rows           |14   |\n    |Number of columns        |6    |\n    |_______________________  |     |\n    |Column type frequency:   |     |\n    |character                |2    |\n    |numeric                  |4    |\n    |________________________ |     |\n    |Group variables          |None |\n    \n    \n    **Variable type: character**\n    \n    |skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n    |:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n    |nombre        |         0|             1|  14|  31|     0|       14|          0|\n    |sexo          |         0|             1|   1|   1|     0|        2|          0|\n    \n    \n    **Variable type: numeric**\n    \n    |skim_variable | n_missing| complete_rate|   mean|    sd|     p0|    p25|    p50|    p75|   p100|hist  |\n    |:-------------|---------:|-------------:|------:|-----:|------:|------:|------:|------:|------:|:-----|\n    |edad          |         0|          1.00|  38.21| 15.62|  18.00|  24.75|  35.00|  49.75|  68.00|▇▅▃▅▂ |\n    |peso          |         1|          0.93|  70.92| 16.13|  51.00|  61.00|  65.00|  78.00| 109.00|▇▅▅▂▂ |\n    |altura        |         0|          1.00|   1.77|  0.12|   1.58|   1.70|   1.75|   1.84|   1.98|▆▇▆▃▃ |\n    |colesterol    |         1|          0.93| 220.23| 39.85| 148.00| 194.00| 210.00| 249.00| 280.00|▂▇▂▅▅ |\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular el tamaño muestral según el sexo.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n\n    ## Base\n    Para calcular la frecuencia absoluta podemos usar la función [`table`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/table) del paquete base de R.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    table(df$sexo)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    \n    H M \n    8 6 \n    ```\n    \n    \n    :::\n    :::\n\n    \n    ## tidyverse\n    Para calcular la frecuencia absoluta podemos usar la función [`count`](https://aprendeconalf.es/manual-r/06-preprocesamiento.html#conteo-del-n%C3%BAmero-de-observaciones) del paquete `dplyr` de `tidyverse`.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(knitr)\n    library(dplyr)\n    count(df, sexo) |> kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |sexo |  n|\n    |:----|--:|\n    |H    |  8|\n    |M    |  6|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  Calcular la media y la desviación típica del nivel de colesterol sin tener en cuenta los datos perdidos.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n    :::{.panel-tabset}\n    ## Base\n    Para calcular la media y la desviación típica podemos usar las funciones [`mean`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/mean) y [`sd`](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/sd) del paquete base de R. Es importante indicar el parámetro `na.rm = TRUE` para eliminar los valores perdidos antes de calcular la media y la desviación típica.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    # Media\n    mean(df$colesterol, na.rm = TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 220.2308\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # Desviación típica:\n    sd(df$colesterol, na.rm = TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 39.84795\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse\n    Podemos obtener un resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`. En particular, para calcular la media y la desviación típica hay que pasarle como argumento las funciones [`mean`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/mean) y [`sd`](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/sd) del paquete base de R. Es importante indicar el parámetro `na.rm = TRUE` para eliminar los valores perdidos antes de calcular la media y la desviación típica.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(dplyr)\n    df |> summarise(media = mean(colesterol, na.rm = TRUE), \n                    desviación_típica = sd(colesterol, na.rm = TRUE)) |> \n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |    media| desviación_típica|\n    |--------:|-----------------:|\n    | 220.2308|          39.84795|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n    \na.  Realizar un resumen estadístico de todas las variables que incluya la media, el mínimo, los cuartiles, el máximo y la desviación típica para las variables cuantitativas y la frecuencia absoluta para las variables cualitativas.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n\n    ## Base\n    Para obtener un resumen estadístico del conjunto de datos podemos usar la función [`summary`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/summary) del paquete `base` de R.\n\n    Parámetros:\n\n    - `object`: objeto del que obtener el resumen estadístico. Suele ser un data frame o un vector.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    summary(df)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n        nombre               edad           sexo          \n     Length:14          Min.   :18.00   Length:14         \n     Class :character   1st Qu.:24.75   Class :character  \n     Mode  :character   Median :35.00   Mode  :character  \n                        Mean   :38.21                     \n                        3rd Qu.:49.75                     \n                        Max.   :68.00                     \n                                                          \n          peso            altura        colesterol   \n     Min.   : 51.00   Min.   :1.580   Min.   :148.0  \n     1st Qu.: 61.00   1st Qu.:1.705   1st Qu.:194.0  \n     Median : 65.00   Median :1.755   Median :210.0  \n     Mean   : 70.92   Mean   :1.769   Mean   :220.2  \n     3rd Qu.: 78.00   3rd Qu.:1.840   3rd Qu.:249.0  \n     Max.   :109.00   Max.   :1.980   Max.   :280.0  \n     NA's   :1                        NA's   :1      \n    ```\n    \n    \n    :::\n    :::\n\n    \n    ## vtable\n    Para obtener un resumen estadístico del conjunto de datos podemos usar la función `st` del paquete [`vtable`](https://cran.r-project.org/web/packages/vtable/vignettes/sumtable.html).\n\n    Parámetros:\n    - `data`: data frame del que obtener el resumen estadístico.\n    \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(vtable)\n    st(df)\n    ```\n    \n    ::: {.cell-output-display}\n    \\begin{table}\n    \n    \\caption{\\label{tab:unnamed-chunk-46}Summary Statistics}\n    \\centering\n    \\begin{tabular}[t]{llllllll}\n    \\toprule\n    Variable & N & Mean & Std. Dev. & Min & Pctl. 25 & Pctl. 75 & Max\\\\\n    \\midrule\n    edad & 14 & 38 & 16 & 18 & 25 & 50 & 68\\\\\n    sexo & 14 &  &  &  &  &  & \\\\\n    ... H & 8 & 57\\% &  &  &  &  & \\\\\n    ... M & 6 & 43\\% &  &  &  &  & \\\\\n    peso & 13 & 71 & 16 & 51 & 61 & 78 & 109\\\\\n    \\addlinespace\n    altura & 14 & 1.8 & 0.12 & 1.6 & 1.7 & 1.8 & 2\\\\\n    colesterol & 13 & 220 & 40 & 148 & 194 & 249 & 280\\\\\n    \\bottomrule\n    \\end{tabular}\n    \\end{table}\n    \n    \n    :::\n    :::\n\n    \n    ## skimr\n    Para obtener un resumen estadístico del conjunto de datos podemos usar la función [`skim`](https://www.rdocumentation.org/packages/skimr/versions/2.2.1/topics/skim) del paquete [`skimr`](https://www.rdocumentation.org/packages/skimr).\n\n    Parámetros:\n    - `data`: data frame del que obtener el resumen estadístico.\n    \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    skim(df)\n    ```\n    \n    ::: {.cell-output-display}\n    \n    Table: Data summary\n    \n    |                         |     |\n    |:------------------------|:----|\n    |Name                     |df   |\n    |Number of rows           |14   |\n    |Number of columns        |6    |\n    |_______________________  |     |\n    |Column type frequency:   |     |\n    |character                |2    |\n    |numeric                  |4    |\n    |________________________ |     |\n    |Group variables          |None |\n    \n    \n    **Variable type: character**\n    \n    |skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n    |:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n    |nombre        |         0|             1|  14|  31|     0|       14|          0|\n    |sexo          |         0|             1|   1|   1|     0|        2|          0|\n    \n    \n    **Variable type: numeric**\n    \n    |skim_variable | n_missing| complete_rate|   mean|    sd|     p0|    p25|    p50|    p75|   p100|hist  |\n    |:-------------|---------:|-------------:|------:|-----:|------:|------:|------:|------:|------:|:-----|\n    |edad          |         0|          1.00|  38.21| 15.62|  18.00|  24.75|  35.00|  49.75|  68.00|▇▅▃▅▂ |\n    |peso          |         1|          0.93|  70.92| 16.13|  51.00|  61.00|  65.00|  78.00| 109.00|▇▅▅▂▂ |\n    |altura        |         0|          1.00|   1.77|  0.12|   1.58|   1.70|   1.75|   1.84|   1.98|▆▇▆▃▃ |\n    |colesterol    |         1|          0.93| 220.23| 39.85| 148.00| 194.00| 210.00| 249.00| 280.00|▂▇▂▅▅ |\n    \n    \n    :::\n    :::\n\n    \n    ## summarytools\n    Para obtener un resumen estadístico del conjunto de datos podemos usar las funciones [`descr`](https://www.rdocumentation.org/packages/summarytools/versions/1.1.4/topics/descr) del paquete [`summarytools`](https://www.rdocumentation.org/packages/summarytools).\n\n    Parámetros:\n    - `x`: vector o data frame del que obtener el resumen estadístico. Por defecto calcula la media, la desviación típica, los cuartiles, el mínimo, el máximo, el rango intercuartílico, el coeficiente de variación, y los coeficientes de asimetría y apuntamiento.\n    \n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    descr(df) |>\n    kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |            |      altura|  colesterol|        edad|        peso|\n    |:-----------|-----------:|-----------:|-----------:|-----------:|\n    |Mean        |   1.7685714| 220.2307692|  38.2142857|  70.9230769|\n    |Std.Dev     |   0.1150155|  39.8479482|  15.6213787|  16.1269006|\n    |Min         |   1.5800000| 148.0000000|  18.0000000|  51.0000000|\n    |Q1          |   1.7000000| 194.0000000|  24.0000000|  61.0000000|\n    |Median      |   1.7550000| 210.0000000|  35.0000000|  65.0000000|\n    |Q3          |   1.8500000| 249.0000000|  51.0000000|  78.0000000|\n    |Max         |   1.9800000| 280.0000000|  68.0000000| 109.0000000|\n    |MAD         |   0.1111950|  41.5128000|  17.7912000|  14.8260000|\n    |IQR         |   0.1350000|  55.0000000|  25.0000000|  17.0000000|\n    |CV          |   0.0650330|   0.1809372|   0.4087837|   0.2273858|\n    |Skewness    |   0.2052057|  -0.0022401|   0.3238511|   0.9149779|\n    |SE.Skewness |   0.5973799|   0.6163361|   0.5973799|   0.6163361|\n    |Kurtosis    |  -0.9852205|  -1.2502343|  -1.2886761|  -0.1208155|\n    |N.Valid     |  14.0000000|  13.0000000|  14.0000000|  13.0000000|\n    |N           |  14.0000000|  14.0000000|  14.0000000|  14.0000000|\n    |Pct.Valid   | 100.0000000|  92.8571429| 100.0000000|  92.8571429|\n    \n    \n    :::\n    :::\n\n    :::\n    :::\n\na.  ¿En qué variable es más representativa la media?\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n\n    ## vtable\n    Para obtener un resumen estadístico del conjunto de datos podemos usar la función `st` del paquete [`vtable`](https://cran.r-project.org/web/packages/vtable/vignettes/sumtable.html).\n\n    Parámetros:\n    - `data`: data frame del que obtener el resumen estadístico.\n    - `vars`: vector de nombres de las variables a incluir en el resumen estadístico.\n    - `group`: nombre de la variable por la que agrupar los datos.\n    - `summ`: vector de funciones a aplicar a las variables seleccionadas.\n    - `summ.names`: vector de nombres para las funciones aplicadas.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    st(df, summ = c('mean(x, na.rm = TRUE)', 'sd(x, na.rm = TRUE)', 'sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)*100'),\n    summ.names = c(\"Media\", \"Desviación Típica\", \"Coef. Variación\"))\n    ```\n    \n    ::: {.cell-output-display}\n    \\begin{table}\n    \n    \\caption{\\label{tab:unnamed-chunk-49}Summary Statistics}\n    \\centering\n    \\begin{tabular}[t]{llll}\n    \\toprule\n    Variable & Media & Desviación Típica & Coef. Variación\\\\\n    \\midrule\n    edad & 38 & 16 & 41\\\\\n    sexo & 14 &  & \\\\\n    ... H & 8 & 57\\% & \\\\\n    ... M & 6 & 43\\% & \\\\\n    peso & 71 & 16 & 23\\\\\n    \\addlinespace\n    altura & 1.8 & 0.12 & 6.5\\\\\n    colesterol & 220 & 40 & 18\\\\\n    \\bottomrule\n    \\end{tabular}\n    \\end{table}\n    \n    \n    :::\n    :::\n\n    \n    ## tidyverse\n    Para obtener un resumen estadístico del conjunto de datos podemos usar las funciones [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) y [`across`](https://dplyr.tidyverse.org/reference/across.html) del paquete `dplyr` de `tidyverse`.\n\n    Parámetros:\n    - `.cols`: Indica las columnas de las que se obtendrá el resúmen estadístico. Para seleccionar solo las variables numéricas hay que pasarel el argumento `where(is.numeric)`.\n    - `.fns`: Indica el nombre y la función a aplicar. En este caso utilizaremos la media `mean`, desviación típica `sd` y el coeficiente de variación `sd / abs(mean) * 100`.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    df |> summarise(across(.cols = where(is.numeric), .fns = list(Media = ~ mean(.x, na.rm = TRUE), `Desviación Típica` = ~ sd(.x, na.rm = TRUE), `Coef. Variación` = ~ sd(.x, na.rm=TRUE) / mean(.x, na.rm=TRUE) * 100))) |>\n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    | edad_Media| edad_Desviación Típica| edad_Coef. Variación| peso_Media| peso_Desviación Típica| peso_Coef. Variación| altura_Media| altura_Desviación Típica| altura_Coef. Variación| colesterol_Media| colesterol_Desviación Típica| colesterol_Coef. Variación|\n    |----------:|----------------------:|--------------------:|----------:|----------------------:|--------------------:|------------:|------------------------:|----------------------:|----------------:|----------------------------:|--------------------------:|\n    |   38.21429|               15.62138|             40.87837|   70.92308|                16.1269|             22.73858|     1.768571|                0.1150155|               6.503301|         220.2308|                     39.84795|                   18.09372|\n    \n    \n    :::\n    :::\n\n\n    ## tidyverse 2\n    Para obtener un resumen estadístico de todas las variables del conjunto de datos tenemos que encadenar las siguientes operaciones:\n    \n    1. Seleccionar las variables numéricas con la función `select` del paquete `dplyr` de `tidyverse`, pasándoloe el argumento `where(is.numeric)`. \n    2. Pivotar el data frame con la función [`pivot_longer`](https://tidyr.tidyverse.org/reference/pivot_longer.html) del paquete `tidyr` de `tidyverse` para pasarlo a formato largo.\n    3. Dividir el data frame por grupos con la función [`group_by`](https://dplyr.tidyverse.org/reference/group_by.html) del paquete `dplyr` de `tidyverse`.\n    4. Calcular el resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`, aplicando las funciones `mean`, `sd` y la fórmula del coeficiente de variación.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    # Seleccionamos las variables numéricas.\n    df |> select(where(is.numeric)) |>\n        # Pivotamos el data frame a formato largo.\n        pivot_longer(everything(), names_to = \"Variable\", values_to = \"Valor\") |>\n        # Agrupamos por variable.\n        group_by(Variable) |>\n        # Calculamos la media, desviación típica y coeficiente de variación.\n        summarise(\"Media\" = mean(Valor, na.rm = TRUE), \n        \"Desviación Típica\" = sd(Valor, na.rm = TRUE),\n        \"Coef. Variación\" = sd(Valor, na.rm = T) / mean(Valor, na.rm = T) * 100) |>\n        # Mostramos el resultado en una tabla.\n        kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |Variable   |      Media| Desviación Típica| Coef. Variación|\n    |:----------|----------:|-----------------:|---------------:|\n    |altura     |   1.768571|         0.1150155|        6.503301|\n    |colesterol | 220.230769|        39.8479482|       18.093724|\n    |edad       |  38.214286|        15.6213787|       40.878374|\n    |peso       |  70.923077|        16.1269006|       22.738580|\n    \n    \n    :::\n    :::\n\n\n    :::\n\n    La variable con el coeficiente de variación más pequeño es la altura, por lo que es la que tiene la media más representativa.\n    :::\n    \na.  Realizar un resumen estadístico con el coeficiente de asimetría y el coeficiente de apuntamiento del peso y la estatura según el sexo. ¿Qué grupo tiene peso más normal, los hombres o las mujeres? ¿Y una estatura más normal?\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n    :::{.panel-tabset}\n\n    ## vtable\n    Para obtener un resumen estadístico del conjunto de datos podemos usar la función `st` del paquete [`vtable`](https://cran.r-project.org/web/packages/vtable/vignettes/sumtable.html).\n\n    Parámetros:\n    - `data`: data frame del que obtener el resumen estadístico.\n      - `vars`: vector de nombres de las variables a incluir en el resumen estadístico.\n      - `group`: nombre de la variable por la que agrupar los datos.\n      - `summ`: vector de funciones a aplicar a las variables seleccionadas.\n      - `summ.names`: vector de nombres para las funciones aplicadas.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(vtable)\n    st(df, vars = c(\"peso\", \"altura\"), group = \"sexo\", summ = c('skewness(x, na.rm = TRUE)', 'kurtosis(x, na.rm = TRUE)'),\n    summ.names = c(\"Coef. Asimetría\", \"Coef. Apuntamiento\"))\n    ```\n    \n    ::: {.cell-output-display}\n    \\begin{table}\n    \n    \\caption{\\label{tab:unnamed-chunk-52}Summary Statistics}\n    \\centering\n    \\begin{tabular}[t]{lllll}\n    \\toprule\n    \\multicolumn{1}{c}{sexo} & \\multicolumn{2}{c}{H} & \\multicolumn{2}{c}{M} \\\\\n    \\cmidrule(l{3pt}r{3pt}){1-1} \\cmidrule(l{3pt}r{3pt}){2-3} \\cmidrule(l{3pt}r{3pt}){4-5}\n    Variable & Coef. Asimetría & Coef. Apuntamiento & Coef. Asimetría & Coef. Apuntamiento\\\\\n    \\midrule\n    peso & 0.61 & 2.5 & -0.47 & 1.9\\\\\n    altura & 0.27 & 1.9 & -0.07 & 1.8\\\\\n    \\bottomrule\n    \\end{tabular}\n    \\end{table}\n    \n    \n    :::\n    :::\n\n    \n    ## tidyverse\n    Para obtener un resumen estadístico con el coeficiente de asimetría y el coeficiente de apuntamiento del peso y la estatura según el sexo tenemos que encadenar las siguientes operaciones:\n    \n    1. Seleccionar las variables deseadas con la función `select` del paquete `dplyr` de `tidyverse`. \n    2. Dividir el data frame por grupos según el sexo con la función [`group_by`](https://dplyr.tidyverse.org/reference/group_by.html) del paquete `dplyr` de `tidyverse`.\n    3. Calcular el resumen estadístico con la función [`summarise`](https://dplyr.tidyverse.org/reference/summarise.html) del paquete `dplyr` de `tidyverse`, aplicando las funciones `skewness` y `kurtosis` del paquete `moments`.\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(moments)\n    # Seleccionamos las variables peso y altura.\n    df |> select(sexo, peso, altura) |>\n    # Agrupamos por sexo.\n    group_by(sexo) |>\n    # Calculamos los coeficientes de asimetria y apuntamiento para cada grupo.\n    summarise(across(.cols = everything(), .fns = list(\"Coef. Asimetría\" = ~ skewness(.x, na.rm = TRUE), \"Coef. Apuntamiento\" = ~ kurtosis(.x, na.rm = TRUE)))) |>\n    kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |sexo | peso_Coef. Asimetría| peso_Coef. Apuntamiento| altura_Coef. Asimetría| altura_Coef. Apuntamiento|\n    |:----|--------------------:|-----------------------:|----------------------:|-------------------------:|\n    |H    |            0.6107239|                2.508255|              0.2668417|                  1.904435|\n    |M    |           -0.4661293|                1.852431|             -0.0699589|                  1.756341|\n    \n    \n    :::\n    :::\n\n    :::\n\n    Las mujeres tienen un peso más normal ya que tanto el coeficiente de asimetría como el de apuntamiento están más próximos a 0. Lo mismo ocurre con la altura.\n    :::\n:::\n\n## Ejercicios propuestos\n\n:::{#exr-descriptiva-tension}\nEn un estudio se ha medido la tensión arterial de 25 individuos. Además se les ha preguntado si fuman y beben:\n\n$$\n\\begin{array}{lccccccccccccc}\n\\hline\n\\mbox{Fumador}  & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{sí} & \\mbox{sí} & \\mbox{no} & \\mbox{no} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{no} \\\\\n\\mbox{Bebedor} & \\mbox{no} & \\mbox{no} & \\mbox{sí} & \\mbox{sí} & \\mbox{no} & \\mbox{no} & \\mbox{sí} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{sí} \\\\\n\\mbox{Tensión arterial} & 80 & 92 & 75 & 56 & 89 & 93 & 101 & 67 & 89 & 63 & 98 & 58 & 91 \\\\\n\\hline\n\\\\\n\\hline\n\\mbox{Fumador}  & \\mbox{sí} & \\mbox{no} & \\mbox{no} & \\mbox{sí} & \\mbox{no} & \\mbox{no} & \\mbox{no} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} \\\\\n\\mbox{Bebedor} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{sí} & \\mbox{no} & \\mbox{no} & \\mbox{sí} & \\mbox{sí} & \\mbox{sí} & \\mbox{no} & \\mbox{sí} & \\mbox{no} \\\\\n\\mbox{Tensión arterial} & 71 & 52 & 98 & 104 & 57 & 89 & 70 & 93 & 69 & 82 & 70 & 49 \\\\\n\\hline\n\\end{array}\n$$\n\na. Calcular la media aritmética, desviación típica, coeficiente de asimetría y curtosis de la tensión arterial de los fumadores y de los no fumadores. ¿Se puede considerar que las muestras provienen de una distribución normal?\n\na. Calcular la media aritmética, desviación típica, coeficiente de asimetría y curtosis de la tensión arterial de los bebedores y de los no bebedores. ¿Se puede considerar que las muestras provienen de una distribución normal?\n\na. Calcular la media aritmética, desviación típica, coeficiente de asimetría y curtosis de la tensión arterial de los grupos que se obtienen según el consumo de alcohol y tabaco. ¿Se puede considerar que las muestras provienen de una distribución normal?\n:::\n\n:::{#exr-descriptiva-neonatos}\nEl conjunto de datos [neonatos](datos/neonatos.csv) contiene información sobre una muestra de 320 recién nacidos en un hospital durante un año que cumplieron el tiempo normal de gestación.\n\na. Calcular la media y la mediana muestral del peso de los nacidos e interpretarlos.\n\na. Calcular el peso medio de los recién nacidos de la muestra según si la madre ha fumado o no durante el embarazo. Calcular también el peso medio de los recién nacidos de madres que no han fumado durante el embarazo, según si la madre\nfumaba o no antes del embarazo. ¿Qué conclusiones se pueden sacar?\n\na. ¿Cuál es la puntuación Apgar al minuto de nacer más frecuente?\n\na. Calcular la media de la diferencia entre las puntuaciones Apgar a los 5 minutos y al minuto de nacer. ¿Cómo evolucionan los recién nacidos?\n\na. Calcular los cuartiles muestrales del peso de los recién nacidos e interpretarlos.\n\na. Comparar los cuartiles muestrales del peso de los recién nacidos según el sexo. \n\na. ¿Por encima de qué peso estarán el 10% de los niños con mayor peso?\n\na. Si se considera que un niño es atípico por bajo peso si se encuentra entre el 5% de los pesos más bajos, ¿por debajo de qué peso tiene que estar?\n\na. Calcular el recorrido y el rango intercuartílico muestrales del peso de los recién nacidos e interpretarlos.\n\na. Calcular la varianza y la desviación típica del peso de los recién nacidos e interpretarlos.\n\na. ¿En qué grupo hay más variabilidad del peso de los recién nacidos, en las madres fumadoras o en las madres no fumadoras durante el embarazo? ¿En qué grupo será más representativo el peso medio?\n\na. ¿Qué variable presenta más variabilidad relativa, el peso de los recién nacidos o el Apgar al minuto de nacer?\n\na. Calcular el coeficiente de asimetría y de apuntamiento muestrales del peso de los recién nacidos e interpretarlos.\n\na. ¿Qué distribución es más asimétrica, la de los pesos de recién nacidos en madres mayores de 20 años o en madres menores de 20 años?\n\na. ¿Qué distribución es más apuntada, la del peso de los recién nacidos en hombres o en mujeres?\n\na. De acuerdo a la forma de la distribución, ¿puede considerarse la puntuación Apgar al minuto de nacer como una variable normal? ¿Y el número de cigarros fumados al día durante el embarazo?\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"unnamed-chunk-37\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{\"html\":{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny_head\"]}},\"value\":[\"<style type=\\\"text/css\\\">img {\\n  background-color: transparent;\\n  border: 0;\\n}\\n\\n.st-table td,\\n.st-table th {\\n  padding: 8px;\\n}\\n\\n.st-table > thead > tr {\\n   background-color: #eeeeee;\\n}\\n\\n.st-cross-table td {\\n  text-align: center;\\n}\\n\\n.st-descr-table td {\\n  text-align: right;\\n}\\n\\ntable.st-table th {\\n  text-align: center;\\n}\\n\\ntable.st-table > thead > tr {\\n   background-color: #eeeeee;\\n}\\n\\ntable.st-table td span {\\n  display: block;\\n}\\n\\ntable.st-table > tfoot > tr > td {\\n  border:none;\\n}\\n\\n.st-container {\\n  width: 100%;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n  margin-right: auto;\\n  margin-left: auto;\\n  margin-top: 15px;\\n}\\n\\n.st-multiline {\\n  white-space: pre;\\n}\\n\\n.st-table {\\n    width: auto;\\n    table-layout: auto;\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n    max-width: 100%;\\n    background-color: transparent;\\n    border-collapse: collapse;\\n}\\n\\n.st-table > thead > tr > th,\\n.st-table > tbody > tr > th,\\n.st-table > tfoot > tr > th,\\n.st-table > thead > tr > td,\\n.st-table > tbody > tr > td,\\n.st-table > tfoot > tr > td {\\n  vertical-align: middle;\\n}\\n\\n.st-table-bordered {\\n  border: 1px solid #bbbbbb;\\n}\\n\\n.st-table-bordered > thead > tr > th,\\n.st-table-bordered > tbody > tr > th,\\n.st-table-bordered > thead > tr > td,\\n.st-table-bordered > tbody > tr > td {\\n  border: 1px solid #cccccc;\\n}\\n\\n.st-table-bordered > thead > tr > th,\\n.st-table-bordered > thead > tr > td,\\n.st-table thead > tr > th {\\n  border-bottom: none;\\n}\\n\\n.st-freq-table > thead > tr > th,\\n.st-freq-table > tbody > tr > th,\\n.st-freq-table > tfoot > tr > th,\\n.st-freq-table > thead > tr > td,\\n.st-freq-table > tbody > tr > td,\\n.st-freq-table > tfoot > tr > td,\\n.st-freq-table-nomiss > thead > tr > th,\\n.st-freq-table-nomiss > tbody > tr > th,\\n.st-freq-table-nomiss > tfoot > tr > th,\\n.st-freq-table-nomiss > thead > tr > td,\\n.st-freq-table-nomiss > tbody > tr > td,\\n.st-freq-table-nomiss > tfoot > tr > td,\\n.st-cross-table > thead > tr > th,\\n.st-cross-table > tbody > tr > th,\\n.st-cross-table > tfoot > tr > th,\\n.st-cross-table > thead > tr > td,\\n.st-cross-table > tbody > tr > td,\\n.st-cross-table > tfoot > tr > td {\\n  padding-left: 20px;\\n  padding-right: 20px;\\n}\\n\\n.st-table-bordered > thead > tr > th,\\n.st-table-bordered > tbody > tr > th,\\n.st-table-bordered > thead > tr > td,\\n.st-table-bordered > tbody > tr > td {\\n  border: 1px solid #cccccc;\\n}\\n\\n.st-table-striped > tbody > tr:nth-of-type(odd) {\\n  background-color: #ffffff;\\n}\\n\\n.st-table-striped > tbody > tr:nth-of-type(even) {\\n  background-color: #f9f9f9;\\n}\\n\\n.st-descr-table > thead > tr > th,\\n.st-descr-table > tbody > tr > th,\\n.st-descr-table > thead > tr > td,\\n.st-descr-table > tbody > tr > td {\\n  padding-left: 24px;\\n  padding-right: 24px;\\n  word-wrap: break-word;\\n}\\n\\n.st-freq-table,\\n.st-freq-table-nomiss,\\n.st-cross-table {\\n  border: medium none;\\n}\\n\\n.st-freq-table > thead > tr:nth-child(1) > th:nth-child(1),\\n.st-cross-table > thead > tr:nth-child(1) > th:nth-child(1),\\n.st-cross-table > thead > tr:nth-child(1) > th:nth-child(3) {\\n  border: none;\\n  background-color: #ffffff;\\n  text-align: center;\\n}\\n\\n.st-protect-top-border {\\n  border-top: 1px solid #cccccc !important;\\n}\\n\\n.st-ws-char {\\n  display: inline;\\n  color: #999999;\\n  letter-spacing: 0.2em;\\n}\\n\\n/* Optional classes */\\n.st-small {\\n  font-size: 13px;\\n}\\n\\n.st-small td,\\n.st-small th {\\n  padding: 8px;\\n}\\n\\n.st-small > thead > tr > th,\\n.st-small > tbody > tr > th,\\n.st-small > thead > tr > td,\\n.st-small > tbody > tr > td {\\n  padding-left: 12px;\\n  padding-right: 12px;\\n}<\\/style>\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}